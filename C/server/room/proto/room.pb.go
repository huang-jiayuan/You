// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.19.4
// source: room.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 创建房间
type CreateRoomStreamReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomName string `protobuf:"bytes,1,opt,name=room_name,json=roomName,proto3" json:"room_name,omitempty"`
	UserId   int32  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TagId    int32  `protobuf:"varint,3,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	Content  string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	IdCard   string `protobuf:"bytes,5,opt,name=idCard,proto3" json:"idCard,omitempty"`
	RealName string `protobuf:"bytes,6,opt,name=realName,proto3" json:"realName,omitempty"`
}

func (x *CreateRoomStreamReq) Reset() {
	*x = CreateRoomStreamReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoomStreamReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomStreamReq) ProtoMessage() {}

func (x *CreateRoomStreamReq) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomStreamReq.ProtoReflect.Descriptor instead.
func (*CreateRoomStreamReq) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{0}
}

func (x *CreateRoomStreamReq) GetRoomName() string {
	if x != nil {
		return x.RoomName
	}
	return ""
}

func (x *CreateRoomStreamReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateRoomStreamReq) GetTagId() int32 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *CreateRoomStreamReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateRoomStreamReq) GetIdCard() string {
	if x != nil {
		return x.IdCard
	}
	return ""
}

func (x *CreateRoomStreamReq) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

type CreateRoomStreamResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateRoomStreamResp) Reset() {
	*x = CreateRoomStreamResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoomStreamResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomStreamResp) ProtoMessage() {}

func (x *CreateRoomStreamResp) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomStreamResp.ProtoReflect.Descriptor instead.
func (*CreateRoomStreamResp) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{1}
}

func (x *CreateRoomStreamResp) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 修改房间信息
type UpdateRoomStreamReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Announcement string `protobuf:"bytes,1,opt,name=announcement,proto3" json:"announcement,omitempty"`
	Id           int32  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Status       string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateRoomStreamReq) Reset() {
	*x = UpdateRoomStreamReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoomStreamReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoomStreamReq) ProtoMessage() {}

func (x *UpdateRoomStreamReq) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoomStreamReq.ProtoReflect.Descriptor instead.
func (*UpdateRoomStreamReq) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateRoomStreamReq) GetAnnouncement() string {
	if x != nil {
		return x.Announcement
	}
	return ""
}

func (x *UpdateRoomStreamReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateRoomStreamReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UpdateRoomStreamResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateRoomStreamResp) Reset() {
	*x = UpdateRoomStreamResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoomStreamResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoomStreamResp) ProtoMessage() {}

func (x *UpdateRoomStreamResp) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoomStreamResp.ProtoReflect.Descriptor instead.
func (*UpdateRoomStreamResp) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateRoomStreamResp) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 踢人请求
type KickUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId     uint64 `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`             // 房间ID
	UserId     uint64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`             // 被踢用户ID
	OperatorId uint64 `protobuf:"varint,3,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"` // 操作者ID
	Reason     string `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`                            // 踢人原因
}

func (x *KickUserReq) Reset() {
	*x = KickUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickUserReq) ProtoMessage() {}

func (x *KickUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickUserReq.ProtoReflect.Descriptor instead.
func (*KickUserReq) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{4}
}

func (x *KickUserReq) GetRoomId() uint64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *KickUserReq) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *KickUserReq) GetOperatorId() uint64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *KickUserReq) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// 房间信息结构
type RoomInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RoomName       string `protobuf:"bytes,2,opt,name=room_name,json=roomName,proto3" json:"room_name,omitempty"`
	UserId         uint64 `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OwnerNickname  string `protobuf:"bytes,4,opt,name=owner_nickname,json=ownerNickname,proto3" json:"owner_nickname,omitempty"`
	OwnerAvatar    string `protobuf:"bytes,5,opt,name=owner_avatar,json=ownerAvatar,proto3" json:"owner_avatar,omitempty"`
	RoomType       string `protobuf:"bytes,6,opt,name=room_type,json=roomType,proto3" json:"room_type,omitempty"`
	Status         string `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	Announcement   string `protobuf:"bytes,8,opt,name=announcement,proto3" json:"announcement,omitempty"`
	CreatedAt      string `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	LastActiveTime string `protobuf:"bytes,10,opt,name=last_active_time,json=lastActiveTime,proto3" json:"last_active_time,omitempty"`
	MemberCount    int32  `protobuf:"varint,11,opt,name=member_count,json=memberCount,proto3" json:"member_count,omitempty"`
	Image          string `protobuf:"bytes,12,opt,name=image,proto3" json:"image,omitempty"`
	TagId          uint64 `protobuf:"varint,13,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	TagName        string `protobuf:"bytes,14,opt,name=tag_name,json=tagName,proto3" json:"tag_name,omitempty"`
}

func (x *RoomInfo) Reset() {
	*x = RoomInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomInfo) ProtoMessage() {}

func (x *RoomInfo) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomInfo.ProtoReflect.Descriptor instead.
func (*RoomInfo) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{5}
}

func (x *RoomInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoomInfo) GetRoomName() string {
	if x != nil {
		return x.RoomName
	}
	return ""
}

func (x *RoomInfo) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RoomInfo) GetOwnerNickname() string {
	if x != nil {
		return x.OwnerNickname
	}
	return ""
}

func (x *RoomInfo) GetOwnerAvatar() string {
	if x != nil {
		return x.OwnerAvatar
	}
	return ""
}

func (x *RoomInfo) GetRoomType() string {
	if x != nil {
		return x.RoomType
	}
	return ""
}

func (x *RoomInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RoomInfo) GetAnnouncement() string {
	if x != nil {
		return x.Announcement
	}
	return ""
}

func (x *RoomInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *RoomInfo) GetLastActiveTime() string {
	if x != nil {
		return x.LastActiveTime
	}
	return ""
}

func (x *RoomInfo) GetMemberCount() int32 {
	if x != nil {
		return x.MemberCount
	}
	return 0
}

func (x *RoomInfo) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *RoomInfo) GetTagId() uint64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *RoomInfo) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

// 推荐房间接口
type GetRecommendRoomsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *GetRecommendRoomsReq) Reset() {
	*x = GetRecommendRoomsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendRoomsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendRoomsReq) ProtoMessage() {}

func (x *GetRecommendRoomsReq) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendRoomsReq.ProtoReflect.Descriptor instead.
func (*GetRecommendRoomsReq) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{6}
}

func (x *GetRecommendRoomsReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetRecommendRoomsReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetRecommendRoomsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rooms      []*RoomInfo `protobuf:"bytes,1,rep,name=rooms,proto3" json:"rooms,omitempty"`
	Total      int32       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page       int32       `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize   int32       `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	TotalPages int32       `protobuf:"varint,5,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
}

func (x *GetRecommendRoomsResp) Reset() {
	*x = GetRecommendRoomsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendRoomsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendRoomsResp) ProtoMessage() {}

func (x *GetRecommendRoomsResp) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendRoomsResp.ProtoReflect.Descriptor instead.
func (*GetRecommendRoomsResp) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{7}
}

func (x *GetRecommendRoomsResp) GetRooms() []*RoomInfo {
	if x != nil {
		return x.Rooms
	}
	return nil
}

func (x *GetRecommendRoomsResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetRecommendRoomsResp) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetRecommendRoomsResp) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetRecommendRoomsResp) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

// 踢人响应
type KickUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 操作是否成功
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // 响应消息
}

func (x *KickUserResp) Reset() {
	*x = KickUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickUserResp) ProtoMessage() {}

func (x *KickUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickUserResp.ProtoReflect.Descriptor instead.
func (*KickUserResp) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{8}
}

func (x *KickUserResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *KickUserResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 禁言请求
type MuteUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId       uint64 `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`                   // 房间ID
	UserId       uint64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                   // 被禁言用户ID
	OperatorId   uint64 `protobuf:"varint,3,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`       // 操作者ID
	DurationType int32  `protobuf:"varint,4,opt,name=duration_type,json=durationType,proto3" json:"duration_type,omitempty"` // 禁言时长类型：1-1小时，2-24小时，3-永久
	Reason       string `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`                                  // 禁言原因
}

func (x *MuteUserReq) Reset() {
	*x = MuteUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuteUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuteUserReq) ProtoMessage() {}

func (x *MuteUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuteUserReq.ProtoReflect.Descriptor instead.
func (*MuteUserReq) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{9}
}

func (x *MuteUserReq) GetRoomId() uint64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *MuteUserReq) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MuteUserReq) GetOperatorId() uint64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *MuteUserReq) GetDurationType() int32 {
	if x != nil {
		return x.DurationType
	}
	return 0
}

func (x *MuteUserReq) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// 禁言响应
type MuteUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 操作是否成功
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // 响应消息
}

func (x *MuteUserResp) Reset() {
	*x = MuteUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuteUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuteUserResp) ProtoMessage() {}

func (x *MuteUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuteUserResp.ProtoReflect.Descriptor instead.
func (*MuteUserResp) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{10}
}

func (x *MuteUserResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *MuteUserResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 解除禁言请求
type UnmuteUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId     uint64 `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`             // 房间ID
	UserId     uint64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`             // 被解除禁言用户ID
	OperatorId uint64 `protobuf:"varint,3,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"` // 操作者ID
}

func (x *UnmuteUserReq) Reset() {
	*x = UnmuteUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnmuteUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnmuteUserReq) ProtoMessage() {}

func (x *UnmuteUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnmuteUserReq.ProtoReflect.Descriptor instead.
func (*UnmuteUserReq) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{11}
}

func (x *UnmuteUserReq) GetRoomId() uint64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *UnmuteUserReq) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UnmuteUserReq) GetOperatorId() uint64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

// 解除禁言响应
type UnmuteUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 操作是否成功
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // 响应消息
}

func (x *UnmuteUserResp) Reset() {
	*x = UnmuteUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnmuteUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnmuteUserResp) ProtoMessage() {}

func (x *UnmuteUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnmuteUserResp.ProtoReflect.Descriptor instead.
func (*UnmuteUserResp) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{12}
}

func (x *UnmuteUserResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UnmuteUserResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 分类浏览接口
type GetRoomsByCategoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagId    uint64 `protobuf:"varint,1,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	Page     int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *GetRoomsByCategoryReq) Reset() {
	*x = GetRoomsByCategoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomsByCategoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomsByCategoryReq) ProtoMessage() {}

func (x *GetRoomsByCategoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomsByCategoryReq.ProtoReflect.Descriptor instead.
func (*GetRoomsByCategoryReq) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{13}
}

func (x *GetRoomsByCategoryReq) GetTagId() uint64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *GetRoomsByCategoryReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetRoomsByCategoryReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetRoomsByCategoryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rooms        []*RoomInfo `protobuf:"bytes,1,rep,name=rooms,proto3" json:"rooms,omitempty"`
	Total        int32       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page         int32       `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize     int32       `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	TotalPages   int32       `protobuf:"varint,5,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
	CategoryName string      `protobuf:"bytes,6,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`
}

func (x *GetRoomsByCategoryResp) Reset() {
	*x = GetRoomsByCategoryResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomsByCategoryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomsByCategoryResp) ProtoMessage() {}

func (x *GetRoomsByCategoryResp) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomsByCategoryResp.ProtoReflect.Descriptor instead.
func (*GetRoomsByCategoryResp) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{14}
}

func (x *GetRoomsByCategoryResp) GetRooms() []*RoomInfo {
	if x != nil {
		return x.Rooms
	}
	return nil
}

func (x *GetRoomsByCategoryResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetRoomsByCategoryResp) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetRoomsByCategoryResp) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetRoomsByCategoryResp) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *GetRoomsByCategoryResp) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

// 搜索房间接口
type SearchRoomsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword  string `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Page     int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *SearchRoomsReq) Reset() {
	*x = SearchRoomsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRoomsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRoomsReq) ProtoMessage() {}

func (x *SearchRoomsReq) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRoomsReq.ProtoReflect.Descriptor instead.
func (*SearchRoomsReq) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{15}
}

func (x *SearchRoomsReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *SearchRoomsReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchRoomsReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type SearchRoomsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rooms      []*RoomInfo `protobuf:"bytes,1,rep,name=rooms,proto3" json:"rooms,omitempty"`
	Total      int32       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page       int32       `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize   int32       `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	TotalPages int32       `protobuf:"varint,5,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`
	Keyword    string      `protobuf:"bytes,6,opt,name=keyword,proto3" json:"keyword,omitempty"`
}

func (x *SearchRoomsResp) Reset() {
	*x = SearchRoomsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRoomsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRoomsResp) ProtoMessage() {}

func (x *SearchRoomsResp) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRoomsResp.ProtoReflect.Descriptor instead.
func (*SearchRoomsResp) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{16}
}

func (x *SearchRoomsResp) GetRooms() []*RoomInfo {
	if x != nil {
		return x.Rooms
	}
	return nil
}

func (x *SearchRoomsResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SearchRoomsResp) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchRoomsResp) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SearchRoomsResp) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *SearchRoomsResp) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

// 关闭房间接口
type CloseRoomStreamReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId int64  `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	UserId uint64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *CloseRoomStreamReq) Reset() {
	*x = CloseRoomStreamReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseRoomStreamReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseRoomStreamReq) ProtoMessage() {}

func (x *CloseRoomStreamReq) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseRoomStreamReq.ProtoReflect.Descriptor instead.
func (*CloseRoomStreamReq) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{17}
}

func (x *CloseRoomStreamReq) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *CloseRoomStreamReq) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CloseRoomStreamResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RoomId  int64  `protobuf:"varint,3,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
}

func (x *CloseRoomStreamResp) Reset() {
	*x = CloseRoomStreamResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseRoomStreamResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseRoomStreamResp) ProtoMessage() {}

func (x *CloseRoomStreamResp) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseRoomStreamResp.ProtoReflect.Descriptor instead.
func (*CloseRoomStreamResp) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{18}
}

func (x *CloseRoomStreamResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CloseRoomStreamResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CloseRoomStreamResp) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

// 进入房间接口
type JoinRoomStreamReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId int64  `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	UserId uint64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *JoinRoomStreamReq) Reset() {
	*x = JoinRoomStreamReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinRoomStreamReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRoomStreamReq) ProtoMessage() {}

func (x *JoinRoomStreamReq) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRoomStreamReq.ProtoReflect.Descriptor instead.
func (*JoinRoomStreamReq) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{19}
}

func (x *JoinRoomStreamReq) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *JoinRoomStreamReq) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type JoinRoomStreamResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success            bool      `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message            string    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	CurrentMemberCount int32     `protobuf:"varint,3,opt,name=current_member_count,json=currentMemberCount,proto3" json:"current_member_count,omitempty"`
	RoomInfo           *RoomInfo `protobuf:"bytes,4,opt,name=room_info,json=roomInfo,proto3" json:"room_info,omitempty"`
}

func (x *JoinRoomStreamResp) Reset() {
	*x = JoinRoomStreamResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinRoomStreamResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRoomStreamResp) ProtoMessage() {}

func (x *JoinRoomStreamResp) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRoomStreamResp.ProtoReflect.Descriptor instead.
func (*JoinRoomStreamResp) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{20}
}

func (x *JoinRoomStreamResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *JoinRoomStreamResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *JoinRoomStreamResp) GetCurrentMemberCount() int32 {
	if x != nil {
		return x.CurrentMemberCount
	}
	return 0
}

func (x *JoinRoomStreamResp) GetRoomInfo() *RoomInfo {
	if x != nil {
		return x.RoomInfo
	}
	return nil
}

// 申请上麦请求
type ApplyMicReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId int64  `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	UserId uint64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ApplyMicReq) Reset() {
	*x = ApplyMicReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyMicReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyMicReq) ProtoMessage() {}

func (x *ApplyMicReq) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyMicReq.ProtoReflect.Descriptor instead.
func (*ApplyMicReq) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{21}
}

func (x *ApplyMicReq) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *ApplyMicReq) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type ApplyMicResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success       bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ApplicationId int64  `protobuf:"varint,3,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
}

func (x *ApplyMicResp) Reset() {
	*x = ApplyMicResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyMicResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyMicResp) ProtoMessage() {}

func (x *ApplyMicResp) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyMicResp.ProtoReflect.Descriptor instead.
func (*ApplyMicResp) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{22}
}

func (x *ApplyMicResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ApplyMicResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApplyMicResp) GetApplicationId() int64 {
	if x != nil {
		return x.ApplicationId
	}
	return 0
}

// 处理上麦申请请求
type HandleMicApplicationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId int64  `protobuf:"varint,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	HandlerId     uint64 `protobuf:"varint,2,opt,name=handler_id,json=handlerId,proto3" json:"handler_id,omitempty"`
	Action        int32  `protobuf:"varint,3,opt,name=action,proto3" json:"action,omitempty"` // 1-批准, 2-拒绝
	Reason        string `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`  // 拒绝原因
}

func (x *HandleMicApplicationReq) Reset() {
	*x = HandleMicApplicationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleMicApplicationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleMicApplicationReq) ProtoMessage() {}

func (x *HandleMicApplicationReq) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleMicApplicationReq.ProtoReflect.Descriptor instead.
func (*HandleMicApplicationReq) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{23}
}

func (x *HandleMicApplicationReq) GetApplicationId() int64 {
	if x != nil {
		return x.ApplicationId
	}
	return 0
}

func (x *HandleMicApplicationReq) GetHandlerId() uint64 {
	if x != nil {
		return x.HandlerId
	}
	return 0
}

func (x *HandleMicApplicationReq) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *HandleMicApplicationReq) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type HandleMicApplicationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	MicInfo *MicInfo `protobuf:"bytes,3,opt,name=mic_info,json=micInfo,proto3" json:"mic_info,omitempty"` // 批准时返回麦位信息
}

func (x *HandleMicApplicationResp) Reset() {
	*x = HandleMicApplicationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleMicApplicationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleMicApplicationResp) ProtoMessage() {}

func (x *HandleMicApplicationResp) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleMicApplicationResp.ProtoReflect.Descriptor instead.
func (*HandleMicApplicationResp) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{24}
}

func (x *HandleMicApplicationResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *HandleMicApplicationResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HandleMicApplicationResp) GetMicInfo() *MicInfo {
	if x != nil {
		return x.MicInfo
	}
	return nil
}

// 下麦请求
type LeaveMicReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId int64  `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	UserId uint64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *LeaveMicReq) Reset() {
	*x = LeaveMicReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveMicReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveMicReq) ProtoMessage() {}

func (x *LeaveMicReq) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveMicReq.ProtoReflect.Descriptor instead.
func (*LeaveMicReq) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{25}
}

func (x *LeaveMicReq) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *LeaveMicReq) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type LeaveMicResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success     bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message     string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	MicPosition int32  `protobuf:"varint,3,opt,name=mic_position,json=micPosition,proto3" json:"mic_position,omitempty"`
}

func (x *LeaveMicResp) Reset() {
	*x = LeaveMicResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveMicResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveMicResp) ProtoMessage() {}

func (x *LeaveMicResp) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveMicResp.ProtoReflect.Descriptor instead.
func (*LeaveMicResp) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{26}
}

func (x *LeaveMicResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LeaveMicResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LeaveMicResp) GetMicPosition() int32 {
	if x != nil {
		return x.MicPosition
	}
	return 0
}

// 踢人下麦请求
type KickFromMicReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId       int64  `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	OperatorId   uint64 `protobuf:"varint,2,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	TargetUserId uint64 `protobuf:"varint,3,opt,name=target_user_id,json=targetUserId,proto3" json:"target_user_id,omitempty"`
	Reason       string `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *KickFromMicReq) Reset() {
	*x = KickFromMicReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickFromMicReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickFromMicReq) ProtoMessage() {}

func (x *KickFromMicReq) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickFromMicReq.ProtoReflect.Descriptor instead.
func (*KickFromMicReq) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{27}
}

func (x *KickFromMicReq) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *KickFromMicReq) GetOperatorId() uint64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *KickFromMicReq) GetTargetUserId() uint64 {
	if x != nil {
		return x.TargetUserId
	}
	return 0
}

func (x *KickFromMicReq) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type KickFromMicResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success     bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message     string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	MicPosition int32  `protobuf:"varint,3,opt,name=mic_position,json=micPosition,proto3" json:"mic_position,omitempty"`
}

func (x *KickFromMicResp) Reset() {
	*x = KickFromMicResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickFromMicResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickFromMicResp) ProtoMessage() {}

func (x *KickFromMicResp) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickFromMicResp.ProtoReflect.Descriptor instead.
func (*KickFromMicResp) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{28}
}

func (x *KickFromMicResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *KickFromMicResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *KickFromMicResp) GetMicPosition() int32 {
	if x != nil {
		return x.MicPosition
	}
	return 0
}

// 禁言/解禁请求
type MuteMicUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId       int64  `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	OperatorId   uint64 `protobuf:"varint,2,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	TargetUserId uint64 `protobuf:"varint,3,opt,name=target_user_id,json=targetUserId,proto3" json:"target_user_id,omitempty"`
	Action       int32  `protobuf:"varint,4,opt,name=action,proto3" json:"action,omitempty"`     // 1-禁言, 2-解禁
	Duration     int32  `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"` // 禁言时长(分钟)
	Reason       string `protobuf:"bytes,6,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *MuteMicUserReq) Reset() {
	*x = MuteMicUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuteMicUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuteMicUserReq) ProtoMessage() {}

func (x *MuteMicUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuteMicUserReq.ProtoReflect.Descriptor instead.
func (*MuteMicUserReq) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{29}
}

func (x *MuteMicUserReq) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *MuteMicUserReq) GetOperatorId() uint64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *MuteMicUserReq) GetTargetUserId() uint64 {
	if x != nil {
		return x.TargetUserId
	}
	return 0
}

func (x *MuteMicUserReq) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *MuteMicUserReq) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *MuteMicUserReq) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// 刷礼物
type SendGiftsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendUserId    int64  `protobuf:"varint,1,opt,name=SendUserId,proto3" json:"SendUserId,omitempty"`
	ReceiveUserId int64  `protobuf:"varint,2,opt,name=ReceiveUserId,proto3" json:"ReceiveUserId,omitempty"`
	RoomId        int64  `protobuf:"varint,3,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	GiftId        int64  `protobuf:"varint,4,opt,name=GiftId,proto3" json:"GiftId,omitempty"`
	SendCount     int64  `protobuf:"varint,5,opt,name=SendCount,proto3" json:"SendCount,omitempty"`
	SendType      string `protobuf:"bytes,6,opt,name=SendType,proto3" json:"SendType,omitempty"`
	Message       string `protobuf:"bytes,7,opt,name=Message,proto3" json:"Message,omitempty"`
	Status        string `protobuf:"bytes,8,opt,name=Status,proto3" json:"Status,omitempty"`
	ClientIp      string `protobuf:"bytes,9,opt,name=ClientIp,proto3" json:"ClientIp,omitempty"`
	SendTime      string `protobuf:"bytes,10,opt,name=SendTime,proto3" json:"SendTime,omitempty"`
}

func (x *SendGiftsReq) Reset() {
	*x = SendGiftsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendGiftsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGiftsReq) ProtoMessage() {}

func (x *SendGiftsReq) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGiftsReq.ProtoReflect.Descriptor instead.
func (*SendGiftsReq) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{30}
}

func (x *SendGiftsReq) GetSendUserId() int64 {
	if x != nil {
		return x.SendUserId
	}
	return 0
}

func (x *SendGiftsReq) GetReceiveUserId() int64 {
	if x != nil {
		return x.ReceiveUserId
	}
	return 0
}

func (x *SendGiftsReq) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *SendGiftsReq) GetGiftId() int64 {
	if x != nil {
		return x.GiftId
	}
	return 0
}

func (x *SendGiftsReq) GetSendCount() int64 {
	if x != nil {
		return x.SendCount
	}
	return 0
}

func (x *SendGiftsReq) GetSendType() string {
	if x != nil {
		return x.SendType
	}
	return ""
}

func (x *SendGiftsReq) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SendGiftsReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SendGiftsReq) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *SendGiftsReq) GetSendTime() string {
	if x != nil {
		return x.SendTime
	}
	return ""
}

type SendGiftsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Greet string `protobuf:"bytes,1,opt,name=greet,proto3" json:"greet,omitempty"`
}

func (x *SendGiftsResp) Reset() {
	*x = SendGiftsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendGiftsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGiftsResp) ProtoMessage() {}

func (x *SendGiftsResp) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGiftsResp.ProtoReflect.Descriptor instead.
func (*SendGiftsResp) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{31}
}

func (x *SendGiftsResp) GetGreet() string {
	if x != nil {
		return x.Greet
	}
	return ""
}

type MuteMicUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *MuteMicUserResp) Reset() {
	*x = MuteMicUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuteMicUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuteMicUserResp) ProtoMessage() {}

func (x *MuteMicUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuteMicUserResp.ProtoReflect.Descriptor instead.
func (*MuteMicUserResp) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{32}
}

func (x *MuteMicUserResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *MuteMicUserResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 获取麦位状态请求
type GetMicStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId int64 `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
}

func (x *GetMicStatusReq) Reset() {
	*x = GetMicStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMicStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMicStatusReq) ProtoMessage() {}

func (x *GetMicStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMicStatusReq.ProtoReflect.Descriptor instead.
func (*GetMicStatusReq) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{33}
}

func (x *GetMicStatusReq) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

type GetMicStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mics                []*MicInfo        `protobuf:"bytes,1,rep,name=mics,proto3" json:"mics,omitempty"`
	PendingApplications []*MicApplication `protobuf:"bytes,2,rep,name=pending_applications,json=pendingApplications,proto3" json:"pending_applications,omitempty"`
}

func (x *GetMicStatusResp) Reset() {
	*x = GetMicStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMicStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMicStatusResp) ProtoMessage() {}

func (x *GetMicStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMicStatusResp.ProtoReflect.Descriptor instead.
func (*GetMicStatusResp) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{34}
}

func (x *GetMicStatusResp) GetMics() []*MicInfo {
	if x != nil {
		return x.Mics
	}
	return nil
}

func (x *GetMicStatusResp) GetPendingApplications() []*MicApplication {
	if x != nil {
		return x.PendingApplications
	}
	return nil
}

// 麦位信息
type MicInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position     int32  `protobuf:"varint,1,opt,name=position,proto3" json:"position,omitempty"`
	Status       int32  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"` // 0-空闲, 1-占用, 2-禁用
	UserId       uint64 `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserNickname string `protobuf:"bytes,4,opt,name=user_nickname,json=userNickname,proto3" json:"user_nickname,omitempty"`
	UserAvatar   string `protobuf:"bytes,5,opt,name=user_avatar,json=userAvatar,proto3" json:"user_avatar,omitempty"`
	OccupyTime   string `protobuf:"bytes,6,opt,name=occupy_time,json=occupyTime,proto3" json:"occupy_time,omitempty"`
	IsLocked     bool   `protobuf:"varint,7,opt,name=is_locked,json=isLocked,proto3" json:"is_locked,omitempty"`
	IsMuted      bool   `protobuf:"varint,8,opt,name=is_muted,json=isMuted,proto3" json:"is_muted,omitempty"`
}

func (x *MicInfo) Reset() {
	*x = MicInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MicInfo) ProtoMessage() {}

func (x *MicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MicInfo.ProtoReflect.Descriptor instead.
func (*MicInfo) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{35}
}

func (x *MicInfo) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *MicInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MicInfo) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MicInfo) GetUserNickname() string {
	if x != nil {
		return x.UserNickname
	}
	return ""
}

func (x *MicInfo) GetUserAvatar() string {
	if x != nil {
		return x.UserAvatar
	}
	return ""
}

func (x *MicInfo) GetOccupyTime() string {
	if x != nil {
		return x.OccupyTime
	}
	return ""
}

func (x *MicInfo) GetIsLocked() bool {
	if x != nil {
		return x.IsLocked
	}
	return false
}

func (x *MicInfo) GetIsMuted() bool {
	if x != nil {
		return x.IsMuted
	}
	return false
}

// 麦位申请信息
type MicApplication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId       uint64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserNickname string `protobuf:"bytes,3,opt,name=user_nickname,json=userNickname,proto3" json:"user_nickname,omitempty"`
	UserAvatar   string `protobuf:"bytes,4,opt,name=user_avatar,json=userAvatar,proto3" json:"user_avatar,omitempty"`
	ApplyTime    string `protobuf:"bytes,5,opt,name=apply_time,json=applyTime,proto3" json:"apply_time,omitempty"`
	Status       int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *MicApplication) Reset() {
	*x = MicApplication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MicApplication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MicApplication) ProtoMessage() {}

func (x *MicApplication) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MicApplication.ProtoReflect.Descriptor instead.
func (*MicApplication) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{36}
}

func (x *MicApplication) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MicApplication) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MicApplication) GetUserNickname() string {
	if x != nil {
		return x.UserNickname
	}
	return ""
}

func (x *MicApplication) GetUserAvatar() string {
	if x != nil {
		return x.UserAvatar
	}
	return ""
}

func (x *MicApplication) GetApplyTime() string {
	if x != nil {
		return x.ApplyTime
	}
	return ""
}

func (x *MicApplication) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 设置房管管理房间
type SetAdminReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	UserId     int64  `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Status     string `protobuf:"bytes,3,opt,name=Status,proto3" json:"Status,omitempty"`
	Reason     string `protobuf:"bytes,5,opt,name=Reason,proto3" json:"Reason,omitempty"`
	MuteDay    string `protobuf:"bytes,6,opt,name=MuteDay,proto3" json:"MuteDay,omitempty"`
	MuteResult string `protobuf:"bytes,7,opt,name=MuteResult,proto3" json:"MuteResult,omitempty"`
	MuteType   string `protobuf:"bytes,8,opt,name=MuteType,proto3" json:"MuteType,omitempty"`
}

func (x *SetAdminReq) Reset() {
	*x = SetAdminReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAdminReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAdminReq) ProtoMessage() {}

func (x *SetAdminReq) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAdminReq.ProtoReflect.Descriptor instead.
func (*SetAdminReq) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{37}
}

func (x *SetAdminReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SetAdminReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SetAdminReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SetAdminReq) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *SetAdminReq) GetMuteDay() string {
	if x != nil {
		return x.MuteDay
	}
	return ""
}

func (x *SetAdminReq) GetMuteResult() string {
	if x != nil {
		return x.MuteResult
	}
	return ""
}

func (x *SetAdminReq) GetMuteType() string {
	if x != nil {
		return x.MuteType
	}
	return ""
}

type SetAdminResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Greet string `protobuf:"bytes,1,opt,name=Greet,proto3" json:"Greet,omitempty"`
}

func (x *SetAdminResp) Reset() {
	*x = SetAdminResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAdminResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAdminResp) ProtoMessage() {}

func (x *SetAdminResp) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAdminResp.ProtoReflect.Descriptor instead.
func (*SetAdminResp) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{38}
}

func (x *SetAdminResp) GetGreet() string {
	if x != nil {
		return x.Greet
	}
	return ""
}

var File_room_proto protoreflect.FileDescriptor

var file_room_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x72, 0x6f,
	0x6f, 0x6d, 0x22, 0xb0, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f,
	0x6d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f,
	0x6f, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x64, 0x43, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x69, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x26, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x61, 0x0a,
	0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x26, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x78, 0x0a, 0x0b, 0x4b, 0x69, 0x63, 0x6b,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x22, 0xa7, 0x03, 0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12,
	0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x61,
	0x67, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x47, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x6f, 0x6f, 0x6d,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x24, 0x0a, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05,
	0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x22, 0x42, 0x0a,
	0x0c, 0x4b, 0x69, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x9d, 0x01, 0x0a, 0x0b, 0x4d, 0x75, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x22, 0x42, 0x0a, 0x0c, 0x4d, 0x75, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x62, 0x0a, 0x0d, 0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x0e, 0x55, 0x6e, 0x6d,
	0x75, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x5f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x42, 0x79, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x22, 0xcb, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x42, 0x79, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x05, 0x72,
	0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x6f, 0x6f,
	0x6d, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x72, 0x6f, 0x6f, 0x6d,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5b,
	0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xb9, 0x01, 0x0a, 0x0f,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x24, 0x0a, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05,
	0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x46, 0x0a, 0x12, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a,
	0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x62, 0x0a, 0x13, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f,
	0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f,
	0x6d, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x11, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xa7, 0x01, 0x0a, 0x12, 0x4a,
	0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x6f, 0x6f,
	0x6d, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3f, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4d, 0x69, 0x63,
	0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x69, 0x0a, 0x0c, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x4d, 0x69,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0x8f, 0x01, 0x0a, 0x17, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x69, 0x63, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x22, 0x78, 0x0a, 0x18, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x69, 0x63, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x6d, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x4d, 0x69, 0x63, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x07, 0x6d, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3f, 0x0a, 0x0b,
	0x4c, 0x65, 0x61, 0x76, 0x65, 0x4d, 0x69, 0x63, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x72,
	0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f,
	0x6f, 0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x65, 0x0a,
	0x0c, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x4d, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x69, 0x63, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x69, 0x63, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x88, 0x01, 0x0a, 0x0e, 0x4b, 0x69, 0x63, 0x6b, 0x46, 0x72, 0x6f,
	0x6d, 0x4d, 0x69, 0x63, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22,
	0x68, 0x0a, 0x0f, 0x4b, 0x69, 0x63, 0x6b, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x69, 0x63, 0x5f, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x69,
	0x63, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xbc, 0x01, 0x0a, 0x0e, 0x4d, 0x75,
	0x74, 0x65, 0x4d, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72,
	0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xa8, 0x02, 0x0a, 0x0c, 0x53, 0x65, 0x6e,
	0x64, 0x47, 0x69, 0x66, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x6e,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x53,
	0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x69, 0x66, 0x74, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x47, 0x69, 0x66, 0x74, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x25, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x65, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x65, 0x65, 0x74, 0x22, 0x45, 0x0a, 0x0f, 0x4d, 0x75,
	0x74, 0x65, 0x4d, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x2a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x7e, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x21, 0x0a, 0x04, 0x6d, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x4d, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x6d, 0x69, 0x63, 0x73, 0x12, 0x47, 0x0a, 0x14, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x4d, 0x69, 0x63, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xf5, 0x01,
	0x0a, 0x07, 0x4d, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75,
	0x73, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1f, 0x0a, 0x0b,
	0x6f, 0x63, 0x63, 0x75, 0x70, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x73, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x69, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73,
	0x5f, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73,
	0x4d, 0x75, 0x74, 0x65, 0x64, 0x22, 0xb6, 0x01, 0x0a, 0x0e, 0x4d, 0x69, 0x63, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65,
	0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x6c, 0x79,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x70,
	0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xbb,
	0x01, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x75, 0x74, 0x65, 0x44, 0x61,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x75, 0x74, 0x65, 0x44, 0x61, 0x79,
	0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4d, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x4d, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x24, 0x0a, 0x0c,
	0x53, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x47, 0x72, 0x65, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x47, 0x72, 0x65,
	0x65, 0x74, 0x32, 0xe8, 0x08, 0x0a, 0x04, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x31, 0x0a, 0x08, 0x4b,
	0x69, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x12, 0x11, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x4b,
	0x69, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x72, 0x6f, 0x6f,
	0x6d, 0x2e, 0x4b, 0x69, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31,
	0x0a, 0x08, 0x4d, 0x75, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x11, 0x2e, 0x72, 0x6f, 0x6f,
	0x6d, 0x2e, 0x4d, 0x75, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e,
	0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x4d, 0x75, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x37, 0x0a, 0x0a, 0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x13, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x55, 0x6e, 0x6d, 0x75,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x09, 0x53, 0x65,
	0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x73, 0x12, 0x12, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x72, 0x6f,
	0x6f, 0x6d, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x69, 0x66, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x31, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x11, 0x2e, 0x72,
	0x6f, 0x6f, 0x6d, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a,
	0x12, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x08, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x12,
	0x17, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e,
	0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x40, 0x0a, 0x09, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12,
	0x18, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x6f, 0x6f, 0x6d,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x72, 0x6f, 0x6f, 0x6d,
	0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f,
	0x6f, 0x6d, 0x12, 0x19, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e,
	0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x19, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4c,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x6f,
	0x6f, 0x6d, 0x73, 0x12, 0x1a, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x1b, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x42, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x12, 0x1b, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f,
	0x6d, 0x73, 0x42, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a,
	0x1c, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x42,
	0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a,
	0x0b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x14, 0x2e, 0x72,
	0x6f, 0x6f, 0x6d, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x15, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x08, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x4d, 0x69, 0x63, 0x12, 0x11, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x4d, 0x69, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x4d, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x55, 0x0a, 0x14,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4d, 0x69, 0x63, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x4d, 0x69, 0x63, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x4d, 0x69, 0x63, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x08, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x4d, 0x69, 0x63, 0x12,
	0x11, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x4d, 0x69, 0x63, 0x52,
	0x65, 0x71, 0x1a, 0x12, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x4d,
	0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0b, 0x4b, 0x69, 0x63, 0x6b, 0x46, 0x72,
	0x6f, 0x6d, 0x4d, 0x69, 0x63, 0x12, 0x14, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x4b, 0x69, 0x63,
	0x6b, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x72, 0x6f,
	0x6f, 0x6d, 0x2e, 0x4b, 0x69, 0x63, 0x6b, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0b, 0x4d, 0x75, 0x74, 0x65, 0x4d, 0x69, 0x63, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x14, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x4d, 0x75, 0x74, 0x65, 0x4d, 0x69, 0x63,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x4d,
	0x75, 0x74, 0x65, 0x4d, 0x69, 0x63, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15,
	0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x42, 0x03, 0x5a,
	0x01, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_room_proto_rawDescOnce sync.Once
	file_room_proto_rawDescData = file_room_proto_rawDesc
)

func file_room_proto_rawDescGZIP() []byte {
	file_room_proto_rawDescOnce.Do(func() {
		file_room_proto_rawDescData = protoimpl.X.CompressGZIP(file_room_proto_rawDescData)
	})
	return file_room_proto_rawDescData
}

var file_room_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_room_proto_goTypes = []any{
	(*CreateRoomStreamReq)(nil),      // 0: room.CreateRoomStreamReq
	(*CreateRoomStreamResp)(nil),     // 1: room.CreateRoomStreamResp
	(*UpdateRoomStreamReq)(nil),      // 2: room.UpdateRoomStreamReq
	(*UpdateRoomStreamResp)(nil),     // 3: room.UpdateRoomStreamResp
	(*KickUserReq)(nil),              // 4: room.KickUserReq
	(*RoomInfo)(nil),                 // 5: room.RoomInfo
	(*GetRecommendRoomsReq)(nil),     // 6: room.GetRecommendRoomsReq
	(*GetRecommendRoomsResp)(nil),    // 7: room.GetRecommendRoomsResp
	(*KickUserResp)(nil),             // 8: room.KickUserResp
	(*MuteUserReq)(nil),              // 9: room.MuteUserReq
	(*MuteUserResp)(nil),             // 10: room.MuteUserResp
	(*UnmuteUserReq)(nil),            // 11: room.UnmuteUserReq
	(*UnmuteUserResp)(nil),           // 12: room.UnmuteUserResp
	(*GetRoomsByCategoryReq)(nil),    // 13: room.GetRoomsByCategoryReq
	(*GetRoomsByCategoryResp)(nil),   // 14: room.GetRoomsByCategoryResp
	(*SearchRoomsReq)(nil),           // 15: room.SearchRoomsReq
	(*SearchRoomsResp)(nil),          // 16: room.SearchRoomsResp
	(*CloseRoomStreamReq)(nil),       // 17: room.CloseRoomStreamReq
	(*CloseRoomStreamResp)(nil),      // 18: room.CloseRoomStreamResp
	(*JoinRoomStreamReq)(nil),        // 19: room.JoinRoomStreamReq
	(*JoinRoomStreamResp)(nil),       // 20: room.JoinRoomStreamResp
	(*ApplyMicReq)(nil),              // 21: room.ApplyMicReq
	(*ApplyMicResp)(nil),             // 22: room.ApplyMicResp
	(*HandleMicApplicationReq)(nil),  // 23: room.HandleMicApplicationReq
	(*HandleMicApplicationResp)(nil), // 24: room.HandleMicApplicationResp
	(*LeaveMicReq)(nil),              // 25: room.LeaveMicReq
	(*LeaveMicResp)(nil),             // 26: room.LeaveMicResp
	(*KickFromMicReq)(nil),           // 27: room.KickFromMicReq
	(*KickFromMicResp)(nil),          // 28: room.KickFromMicResp
	(*MuteMicUserReq)(nil),           // 29: room.MuteMicUserReq
	(*SendGiftsReq)(nil),             // 30: room.SendGiftsReq
	(*SendGiftsResp)(nil),            // 31: room.SendGiftsResp
	(*MuteMicUserResp)(nil),          // 32: room.MuteMicUserResp
	(*GetMicStatusReq)(nil),          // 33: room.GetMicStatusReq
	(*GetMicStatusResp)(nil),         // 34: room.GetMicStatusResp
	(*MicInfo)(nil),                  // 35: room.MicInfo
	(*MicApplication)(nil),           // 36: room.MicApplication
	(*SetAdminReq)(nil),              // 37: room.SetAdminReq
	(*SetAdminResp)(nil),             // 38: room.SetAdminResp
}
var file_room_proto_depIdxs = []int32{
	5,  // 0: room.GetRecommendRoomsResp.rooms:type_name -> room.RoomInfo
	5,  // 1: room.GetRoomsByCategoryResp.rooms:type_name -> room.RoomInfo
	5,  // 2: room.SearchRoomsResp.rooms:type_name -> room.RoomInfo
	5,  // 3: room.JoinRoomStreamResp.room_info:type_name -> room.RoomInfo
	35, // 4: room.HandleMicApplicationResp.mic_info:type_name -> room.MicInfo
	35, // 5: room.GetMicStatusResp.mics:type_name -> room.MicInfo
	36, // 6: room.GetMicStatusResp.pending_applications:type_name -> room.MicApplication
	4,  // 7: room.Room.KickUser:input_type -> room.KickUserReq
	9,  // 8: room.Room.MuteUser:input_type -> room.MuteUserReq
	11, // 9: room.Room.UnmuteUser:input_type -> room.UnmuteUserReq
	30, // 10: room.Room.SendGifts:input_type -> room.SendGiftsReq
	37, // 11: room.Room.SetAdmin:input_type -> room.SetAdminReq
	19, // 12: room.Room.JoinRoom:input_type -> room.JoinRoomStreamReq
	17, // 13: room.Room.CloseRoom:input_type -> room.CloseRoomStreamReq
	2,  // 14: room.Room.UpdateRoom:input_type -> room.UpdateRoomStreamReq
	0,  // 15: room.Room.CreateRoom:input_type -> room.CreateRoomStreamReq
	6,  // 16: room.Room.GetRecommendRooms:input_type -> room.GetRecommendRoomsReq
	13, // 17: room.Room.GetRoomsByCategory:input_type -> room.GetRoomsByCategoryReq
	15, // 18: room.Room.SearchRooms:input_type -> room.SearchRoomsReq
	21, // 19: room.Room.ApplyMic:input_type -> room.ApplyMicReq
	23, // 20: room.Room.HandleMicApplication:input_type -> room.HandleMicApplicationReq
	25, // 21: room.Room.LeaveMic:input_type -> room.LeaveMicReq
	27, // 22: room.Room.KickFromMic:input_type -> room.KickFromMicReq
	29, // 23: room.Room.MuteMicUser:input_type -> room.MuteMicUserReq
	33, // 24: room.Room.GetMicStatus:input_type -> room.GetMicStatusReq
	8,  // 25: room.Room.KickUser:output_type -> room.KickUserResp
	10, // 26: room.Room.MuteUser:output_type -> room.MuteUserResp
	12, // 27: room.Room.UnmuteUser:output_type -> room.UnmuteUserResp
	31, // 28: room.Room.SendGifts:output_type -> room.SendGiftsResp
	38, // 29: room.Room.SetAdmin:output_type -> room.SetAdminResp
	20, // 30: room.Room.JoinRoom:output_type -> room.JoinRoomStreamResp
	18, // 31: room.Room.CloseRoom:output_type -> room.CloseRoomStreamResp
	3,  // 32: room.Room.UpdateRoom:output_type -> room.UpdateRoomStreamResp
	1,  // 33: room.Room.CreateRoom:output_type -> room.CreateRoomStreamResp
	7,  // 34: room.Room.GetRecommendRooms:output_type -> room.GetRecommendRoomsResp
	14, // 35: room.Room.GetRoomsByCategory:output_type -> room.GetRoomsByCategoryResp
	16, // 36: room.Room.SearchRooms:output_type -> room.SearchRoomsResp
	22, // 37: room.Room.ApplyMic:output_type -> room.ApplyMicResp
	24, // 38: room.Room.HandleMicApplication:output_type -> room.HandleMicApplicationResp
	26, // 39: room.Room.LeaveMic:output_type -> room.LeaveMicResp
	28, // 40: room.Room.KickFromMic:output_type -> room.KickFromMicResp
	32, // 41: room.Room.MuteMicUser:output_type -> room.MuteMicUserResp
	34, // 42: room.Room.GetMicStatus:output_type -> room.GetMicStatusResp
	25, // [25:43] is the sub-list for method output_type
	7,  // [7:25] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_room_proto_init() }
func file_room_proto_init() {
	if File_room_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_room_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CreateRoomStreamReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreateRoomStreamResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateRoomStreamReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateRoomStreamResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*KickUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*RoomInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetRecommendRoomsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetRecommendRoomsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*KickUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*MuteUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*MuteUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*UnmuteUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*UnmuteUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*GetRoomsByCategoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*GetRoomsByCategoryResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*SearchRoomsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*SearchRoomsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*CloseRoomStreamReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*CloseRoomStreamResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*JoinRoomStreamReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*JoinRoomStreamResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*ApplyMicReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*ApplyMicResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*HandleMicApplicationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*HandleMicApplicationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*LeaveMicReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*LeaveMicResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*KickFromMicReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*KickFromMicResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*MuteMicUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*SendGiftsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*SendGiftsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*MuteMicUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*GetMicStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*GetMicStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*MicInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*MicApplication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*SetAdminReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*SetAdminResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_room_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_room_proto_goTypes,
		DependencyIndexes: file_room_proto_depIdxs,
		MessageInfos:      file_room_proto_msgTypes,
	}.Build()
	File_room_proto = out.File
	file_room_proto_rawDesc = nil
	file_room_proto_goTypes = nil
	file_room_proto_depIdxs = nil
}