syntax = "proto3";

package user;

option go_package = "/";

message StreamReq {
  string name = 1;
}
message StreamResp {
  string greet = 1;
}

//todo：短信
message SendSmsRequest {
  string username = 1; //手机号
  string source = 2; //来源
}
message SendSmsResponse {
  string greet = 1;
}

//todo:登录注册一体化
message UserLoginRequest{
  string username = 1; //手机号
  string  code   = 2; //验证码
  string lastLoginIp = 3;
}
message UserLoginResponse{
  int64 greet = 1;
}

//todo:手机号密码登录
message UserPasswordRequest{
  string username = 1;
  string password = 2;
  bool rememberMe = 3;
}
message UserPasswordResponse{
  int64 greet = 1;
  string token = 2;
}

//todo:验证令牌请求
message VerifyTokenRequest {
  string token = 1;
}
message VerifyTokenResponse {
  bool valid = 1;
  string username = 2; // 令牌对应的用户名
}

//todo:用户登出
message LogoutRequest {
  string token = 1;
}
message LogoutResponse {
  string greet = 1;
}

//todo:修改密码
message UpdatePasswordRequest{
  int64 userId = 1;
  string password = 2;
}
message UpdatePasswordResponse{
  string greet = 1;
}

//todo:完善个人信息
message ImproveUserMessageRequest{
  int64 userId = 1;
  string nickname = 2;
  string avatar = 3;
  string gender = 4;
  string voiceTag = 5;
  string InterestTags = 6;
}
message ImproveUserMessageResponse{
  string greet = 1;
}

//todo:用户关注
message FollowUserRequest{
  int64 userId = 1;
  int64 FollowedId = 2;
}
message FollowUserResponse{
  string greet = 1;
}

//todo:用户取消关注
message UnFollowUserRequest{
  int64 userId = 1;
  int64 FollowedId = 2;
}
message UnFollowUserResponse{
  string greet = 1;
}

//todo: 用户关注列表
message UserFollowListRequest{
  int64 userId = 1;
}

message UserFollowListResponse{
  repeated UserFollowList list = 1;
}

message UserFollowList {
  string Nickname = 1;
  string Avatar = 2;
}
//todo: 创建消息请求
message CreateMessageRequest {
  int64 FromUserId = 1;  // 发送者ID
  int64 ToUserId = 2;    // 接收者ID
  string Type = 3;       // 消息类型：text, image, system
  string Content = 4;    // 消息内容
}

message CreateMessageResponse {
  string MessageId = 1;  // 创建的消息ID
}

//todo: 标记消息为已读请求
message MarkMessageAsReadRequest {
  int64 MessageId = 1;  // 消息ID
}

message MarkMessageAsReadResponse {
  bool Success = 1;      // 操作是否成功
}

//todo: 标记消息为已发送请求
message MarkMessageAsDeliveredRequest {
  int64 MessageId = 1;  // 消息ID
}

message MarkMessageAsDeliveredResponse {
  bool Success = 1;      // 操作是否成功
}

//todo: 用户个人中心
message UserCenterListRequest{
  int64 userId = 1;
}

message UserCenterListResponse{
 repeated  UserCenterList list = 1;
}

message UserCenterList{
  string  Nickname =1;
  string  Avatar = 2;
  string  Gender = 3;
  string  VoiceTag = 4;
  string  InterestTags = 5;
  int64   Level =6;
  string  VipStatus = 7;
  float  Balance = 8;
  int64   Diamond = 9;
}



service User {
  rpc greet(StreamReq) returns (StreamResp);
  rpc SendSms(SendSmsRequest) returns(SendSmsResponse);
  rpc UserLogin(UserLoginRequest) returns(UserLoginResponse);
  rpc UserPassword(UserPasswordRequest) returns(UserPasswordResponse);
  rpc VerifyToken (VerifyTokenRequest) returns (VerifyTokenResponse);
  rpc Logout (LogoutRequest) returns (LogoutResponse);
  rpc UpdatePassword(UpdatePasswordRequest) returns(UpdatePasswordResponse);
  rpc ImproveUserMessage(ImproveUserMessageRequest) returns(ImproveUserMessageResponse);
  rpc FollowUser(FollowUserRequest) returns(FollowUserResponse);
  rpc UnFollowUser(UnFollowUserRequest) returns(UnFollowUserResponse);
  rpc UserFollowList(UserFollowListRequest) returns(UserFollowListResponse);
  rpc CreateMessage(CreateMessageRequest) returns(CreateMessageResponse);
  rpc MarkMessageAsRead(MarkMessageAsReadRequest) returns(MarkMessageAsReadResponse);
  rpc MarkMessageAsDelivered(MarkMessageAsDeliveredRequest) returns(MarkMessageAsDeliveredResponse);
  rpc UserCenterList(UserCenterListRequest) returns(UserCenterListResponse);
}